import { type VirtualItem, type Virtualizer } from '@tanstack/react-virtual';
import { type MRT_Row, type MRT_RowData, type MRT_TableInstance } from '../types';
interface Props<TData extends MRT_RowData> {
    columnVirtualizer?: Virtualizer<HTMLDivElement, HTMLTableCellElement>;
    measureElement?: (element: HTMLTableRowElement) => void;
    numRows?: number;
    pinnedRowIds?: string[];
    row: MRT_Row<TData>;
    rowIndex: number;
    table: MRT_TableInstance<TData>;
    virtualColumns?: VirtualItem[];
    virtualPaddingLeft?: number;
    virtualPaddingRight?: number;
    virtualRow?: VirtualItem;
}
export declare const MRT_TableBodyRow: <TData extends MRT_RowData>({ columnVirtualizer, measureElement, numRows, pinnedRowIds, row, rowIndex, table, virtualColumns, virtualPaddingLeft, virtualPaddingRight, virtualRow, }: Props<TData>) => import("react/jsx-runtime").JSX.Element;
export declare const Memo_MRT_TableBodyRow: <TData extends MRT_RowData>({ columnVirtualizer, measureElement, numRows, pinnedRowIds, row, rowIndex, table, virtualColumns, virtualPaddingLeft, virtualPaddingRight, virtualRow, }: Props<TData>) => import("react/jsx-runtime").JSX.Element;
export {};
